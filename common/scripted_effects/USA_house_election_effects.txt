USA_recalc_house = {
	every_owned_state = {
		limit = { can_have_elections_in_state = yes }
		USA_recalc_house_state = yes
	}
	USA_calculate_reps = yes
}

USA_recalc_house_state = { # call within state
	
	set_variable = { old_state_reps_total = electoral_votes } # find total reps to distribute
	subtract_from_variable = { old_state_reps_total = 2 } # remove 2 senators
	
	#log = "[This.GetName] : old_state_reps_total - [?old_state_reps_total]"
	
	### COMMUNISTS ###
	set_variable = {
		state_communist_reps = communist_election_pop
	}
	if = {
		limit = {
			check_variable = { communist_election_pop < 0.15 }
		}
		multiply_variable = {
			state_communist_reps = 0.5
		}
	}
	
	### SOCIALISTS ###
	set_variable = {
		state_socialist_reps = socialist_election_pop
	}
	
	### DEMOCRATS ###
	set_variable = {
		state_democrat_reps = democrat_election_pop
	}
	
	### REPUBLICANS ###
	set_variable = {
		state_republican_reps = republican_election_pop
	}
	if = {
		limit = {
			check_variable = { republican_election_pop < 0.15 }
		}
		multiply_variable = {
			state_republican_reps = 0.45
		}
	}
	else_if = {
		limit = {
			check_variable = { republican_election_pop < 0.3 }
		}
		multiply_variable = {
			state_republican_reps = 0.65
		}
	}
	
	### AFP ###
	set_variable = {
		state_afp_reps = afp_election_pop
	}
	if = {
		limit = {
			check_variable = { afp_election_pop < 0.15 }
		}
		multiply_variable = {
			state_afp_reps = 0.75
		}
	}
	else_if = {
		limit = {
			check_variable = { afp_election_pop < 0.3 }
		}
		multiply_variable = {
			state_afp_reps = 0.9
		}
	}
	
	### TOTALING AND ROUNDING ###
	multiply_variable = {
		state_communist_reps = old_state_reps_total
	}
	multiply_variable = {
		state_socialist_reps = old_state_reps_total
	}
	multiply_variable = {
		state_democrat_reps = old_state_reps_total
	}
	multiply_variable = {
		state_republican_reps = old_state_reps_total
	}
	multiply_variable = {
		state_afp_reps = old_state_reps_total
	}
	
	round_variable = state_communist_reps
	round_variable = state_socialist_reps
	round_variable = state_democrat_reps
	round_variable = state_republican_reps
	round_variable = state_afp_reps
	
	### GERRYMANDERING ###
	if = {
		limit = {
			AND = {
				has_state_flag = USA_gerrymandered_socialist
				check_variable = { state_democrat_reps > 1 }
			}
		}
		subtract_from_variable = { state_democrat_reps = 1 }
		add_to_variable = { state_socialist_reps = 1 }
		log = "[This.GetName] : USA_recalc_house_state is USA_gerrymandered_socialist"
	}
	else_if = {
		limit = {
			AND = {
				has_state_flag = USA_gerrymandered_democrat
				check_variable = { state_socialist_reps > 1 }
			}
		}
		subtract_from_variable = { state_socialist_reps = 1 }
		add_to_variable = { state_democrat_reps = 1 }
		log = "[This.GetName] : USA_recalc_house_state is USA_gerrymandered_democrat"
	}
	
	### FINISHING UP ###
	set_variable = {
		state_reps_total = 0
	}
	add_to_variable = {
		state_reps_total = state_communist_reps
	}
	add_to_variable = {
		state_reps_total = state_socialist_reps
	}
	add_to_variable = {
		state_reps_total = state_democrat_reps
	}
	add_to_variable = {
		state_reps_total = state_republican_reps
	}
	add_to_variable = {
		state_reps_total = state_afp_reps
	}
	
	#log = "[This.GetName] : state_reps_total: [?state_reps_total]"
	
	subtract_from_variable = { # checks for discrepancy
		old_state_reps_total = state_reps_total
	}
	
	#log = "[This.GetName] : old_state_reps_total - state_reps_total: [?old_state_reps_total]"
	
	if = { # fixes discrepancy
		limit = {
			NOT = {
				check_variable = {
					old_state_reps_total = 0
				}
			}
		}
		log = "[This.GetName] : found state discrepancy: [?old_state_reps_total]"
		if = {
			limit = {
				check_variable = { socialist_election_pop > democrat_election_pop }
				check_variable = { socialist_election_pop > republican_election_pop }
				check_variable = { socialist_election_pop > afp_election_pop }
			}
			log = "[This.GetName] : discrepancy awarded to state_socialist_reps"
			add_to_variable = {
				state_socialist_reps = old_state_reps_total
			}
		}
		else_if = {
			limit = {
				check_variable = { republican_election_pop > socialist_election_pop }
				check_variable = { republican_election_pop > democrat_election_pop }
				check_variable = { republican_election_pop > afp_election_pop }
			}
			log = "[This.GetName] : discrepancy awarded to state_republican_reps"
			add_to_variable = {
				state_republican_reps = old_state_reps_total
			}
		}
		else_if = {
			limit = {
				check_variable = { democrat_election_pop > socialist_election_pop }
				check_variable = { democrat_election_pop > republican_election_pop }
				check_variable = { democrat_election_pop > afp_election_pop }
			}
			log = "[This.GetName] : discrepancy awarded to state_democrat_reps"
			add_to_variable = {
				state_democrat_reps = old_state_reps_total
			}
		}
		else_if = {
			limit = {
				check_variable = { afp_election_pop > socialist_election_pop }
				check_variable = { afp_election_pop > republican_election_pop }
				check_variable = { afp_election_pop > democrat_election_pop }
			}
			log = "[This.GetName] : discrepancy awarded to state_afp_reps"
			add_to_variable = {
				state_afp_reps = old_state_reps_total
			}
		}
	}
	
	log = "[This.GetName] : state_communist_reps - [?state_communist_reps]"
	log = "[This.GetName] : state_socialist_reps - [?state_socialist_reps]"
	log = "[This.GetName] : state_democrat_reps - [?state_democrat_reps]"
	log = "[This.GetName] : state_republican_reps - [?state_republican_reps]"
	log = "[This.GetName] : state_afp_reps - [?state_afp_reps]"
}
